name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}
      version: ${{ steps.get-version.outputs.version }}
    steps:
      - name: Get version
        id: get-version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        id: create-release
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: '${{ steps.get-version.outputs.version }}',
              name: 'RIP ${{ steps.get-version.outputs.version }}',
              body: `## What's Changed in ${{ steps.get-version.outputs.version }}
              
              üîç **Security Scanner Updates**
              - Local file scanning for exposed secrets and credentials
              - Web vulnerability scanning for common attack vectors
              - Interactive configuration with environment variable detection
              - Beautiful terminal UI with progress indicators
              
              üì¶ **Installation**
              \`\`\`bash
              npx rip
              \`\`\`
              
              üöÄ **Quick Start**
              \`\`\`bash
              # Scan current directory
              npx rip
              
              # Interactive setup
              npx rip --setup
              
              # Include web scanning
              npx rip --web https://example.com
              \`\`\`
              
              üìã **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.get-version.outputs.version }}...HEAD`,
              draft: false,
              prerelease: false
            });
            return data.id

  build:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: rip-linux-x64
          
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            name: rip-linux-arm64
          
          - target: x86_64-apple-darwin
            os: macos-latest
            name: rip-macos-x64
          
          - target: aarch64-apple-darwin
            os: macos-latest
            name: rip-macos-arm64
          
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            name: rip-windows-x64
            ext: .exe

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross-compilation tools (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Configure cross-compilation (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          echo '[target.aarch64-unknown-linux-gnu]' >> ~/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config.toml

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary (Unix)
        if: matrix.ext != '.exe'
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/rip dist/${{ matrix.name }}
          chmod +x dist/${{ matrix.name }}

      - name: Package binary (Windows)
        if: matrix.ext == '.exe'
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/rip.exe dist/${{ matrix.name }}.exe

      - name: Upload binary to release
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            const filename = '${{ matrix.name }}${{ matrix.ext }}';
            const filepath = path.join('dist', filename);
            
            await github.rest.repos.uploadReleaseAsset({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ needs.create-release.outputs.release_id }},
              name: filename,
              data: fs.readFileSync(filepath)
            });

  publish-npm:
    needs: [create-release, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Update package version
        run: |
          VERSION="${{ needs.create-release.outputs.version }}"
          # Remove 'v' prefix if present
          VERSION=${VERSION#v}
          npm version $VERSION --no-git-tag-version
      
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  update-release:
    needs: [create-release, build, publish-npm]
    runs-on: ubuntu-latest
    steps:
      - name: Update release description
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ needs.create-release.outputs.release_id }},
              body: `## What's Changed in ${{ needs.create-release.outputs.version }}
              
              üîç **Security Scanner Updates**
              - Local file scanning for exposed secrets and credentials
              - Web vulnerability scanning for common attack vectors
              - Interactive configuration with environment variable detection
              - Beautiful terminal UI with progress indicators
              
              üì¶ **Installation**
              \`\`\`bash
              npm install -g rip
              # or
              npx rip
              \`\`\`
              
              üöÄ **Quick Start**
              \`\`\`bash
              # Scan current directory
              rip
              
              # Interactive setup
              rip --setup
              
              # Include web scanning
              rip --web https://example.com
              \`\`\`
              
              ## Downloads
              
              Choose the binary for your platform:
              
              | Platform | Architecture | Download |
              |----------|-------------|----------|
              | Linux | x64 | [rip-linux-x64](https://github.com/${{ github.repository }}/releases/download/${{ needs.create-release.outputs.version }}/rip-linux-x64) |
              | Linux | ARM64 | [rip-linux-arm64](https://github.com/${{ github.repository }}/releases/download/${{ needs.create-release.outputs.version }}/rip-linux-arm64) |
              | macOS | Intel | [rip-macos-x64](https://github.com/${{ github.repository }}/releases/download/${{ needs.create-release.outputs.version }}/rip-macos-x64) |
              | macOS | Apple Silicon | [rip-macos-arm64](https://github.com/${{ github.repository }}/releases/download/${{ needs.create-release.outputs.version }}/rip-macos-arm64) |
              | Windows | x64 | [rip-windows-x64.exe](https://github.com/${{ github.repository }}/releases/download/${{ needs.create-release.outputs.version }}/rip-windows-x64.exe) |
              
              üìã **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ needs.create-release.outputs.version }}...HEAD
              
              ---
              
              üéâ **Also available on NPM**: [\`npm install -g rip\`](https://www.npmjs.com/package/rip)`
            });